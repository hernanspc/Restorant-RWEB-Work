{"version":3,"sources":["firebase/config.js","firebase/firebase.js","firebase/context.js","firebase/index.js","components/ui/Orden.js","utils/functions.js","components/paginas/Ordenes.js","components/paginas/OrdenesPasadas.js","components/ui/Platillo.js","components/paginas/Menu.js","components/paginas/NuevoPlatillo.js","components/paginas/ActualizarPlatillo.js","components/ui/Sidebar.js","App.js","serviceWorker.js","index.js"],"names":["firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","app","apps","length","initializeApp","this","db","firestore","storage","FirebaseContext","createContext","Orden","value","orden","useState","tiempoentrega","guardarTiempoEntrega","useContext","className","id","map","platillos","cantidad","nombre","total","toLocaleString","currency","parseFloat","toFixed","replace","type","min","max","placeholder","onChange","e","parseInt","target","onClick","collection","doc","update","error","console","log","message","difinirTiempo","completado","completarOrden","Ordenes","ordenes","guardarOrdenes","manejarSnapshot","snapshot","docs","data","useEffect","where","onSnapshot","key","ordenesPasadas","Platillo","platillo","navigate","useNavigate","exitenciaRef","useRef","existencia","imagen","categoria","precio","descripcion","src","alt","ref","current","actualizarDisponibilidad","class","state","toUpperCase","Menu","guardarPlatillos","handleSnapshot","to","NuevoPlatillo","subiendo","guardarSubiendo","progreso","guardarProgreso","urlimagen","guardarUrlimagen","formik","useFormik","initialValues","validationSchema","Yup","required","onSubmit","add","handleUploadSuccess","child","getDownloadURL","url","handleSubmit","htmlFor","values","handleChange","onBlur","handleBlur","touched","errors","role","name","accept","randomizeFilename","storageRef","onUploadStart","onUploadError","onUploadSuccess","onProgress","style","width","ActualizarPlatillo","useLocation","descripci√≥n","height","padding","objectFit","Sidebar","activeClassName","exact","App","Provider","path","element","OrdenesPasadas","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.0a8e3845.chunk.js","sourcesContent":["// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBQYP3DOrhWC89l34wpmF-p74IRcXOxgMs\",\n  authDomain: \"restorant-327da.firebaseapp.com\",\n  projectId: \"restorant-327da\",\n  storageBucket: \"restorant-327da.appspot.com\",\n  messagingSenderId: \"939152086215\",\n  appId: \"1:939152086215:web:34b877309e31934605dae2\",\n  measurementId: \"G-DV564RXBS4\",\n};\n\nexport default firebaseConfig;\n","// import { initializeApp } from \"firebase/app\";\nimport app from \"firebase/compat/app\";\n// import { getFirestore } from \"firebase/firestore\";\n\nimport firebaseConfig from \"./config\";\nimport \"firebase/compat/firestore\";\nimport \"firebase/compat/storage\";\n\nclass Firebase {\n  constructor() {\n    if (!app.apps.length) {\n      app.initializeApp(firebaseConfig);\n    }\n    this.db = app.firestore();\n    this.storage = app.storage();\n  }\n}\n\n// const firebase = initializeApp(firebaseConfig);\n// console.log(\"firebase\", firebase);\nconst firebase = new Firebase();\n// console.log(\"firebase\", firebase);\nexport default firebase;\n","import { createContext } from \"react\";\n\nconst FirebaseContext = createContext();\n\nexport default FirebaseContext;\n","import firebase from \"./firebase\";\nimport FirebaseContext from \"./context\";\n\nexport { FirebaseContext };\n\nexport default firebase;\n","import React, { useContext, useState } from 'react'\nimport { FirebaseContext } from '../../firebase'\nimport { formatUSD } from '../../utils/functions'\n\nconst Orden = ({ orden }) => {\n\n    const [tiempoentrega, guardarTiempoEntrega] = useState(0);\n\n    //context de firebase\n    const { firebase } = useContext(FirebaseContext);\n\n    //define tiempo entrega en tiempo real\n    const difinirTiempo = id => {\n        // console.log('tiempoentrega ', tiempoentrega)\n        try {\n            firebase.db.collection('ordenes')\n                .doc(id)\n                .update({\n                    tiempoentrega\n                })\n        } catch (error) {\n            console.log('Orden:', error.message)\n        }\n    }\n\n    //completa el estado de una orden \n    const completarOrden = id => {\n        try {\n            firebase.db.collection('ordenes')\n                .doc(id)\n                .update({\n                    completado: true\n                })\n        } catch (error) {\n            console.log(error.message)\n        }\n    }\n\n    return (\n        <div className=\"sm:w-1/2 lg:w-1/3 px-2 mb-4\">\n            <div className=\"p-3 shadow-md bg-white\">\n                <h1 className=\"text-yellow-600 text-lg font-bold\">{orden.id}</h1>\n                {orden.orden.map(platillos => (\n                    <p className=\"text-gray-600\">{platillos.cantidad} {platillos.nombre}</p>\n                ))}\n                <p className=\"text-gray-700 font-bold\">Total a Pagar: S/. {formatUSD(orden.total)} </p>\n\n                {orden.tiempoentrega === 0 && (\n                    <div className='mb-4'>\n                        <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                            Tiempo de Entrega\n                        </label>\n\n                        <input\n                            type=\"number\"\n                            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                            min=\"1\"\n                            max=\"30\"\n                            placeholder='30'\n                            // value={tiempoentrega}\n                            onChange={e => guardarTiempoEntrega(parseInt(e.target.value))}\n                        />\n\n                        <button\n                            onClick={() => difinirTiempo(orden.id)}\n                            type=\"submit\"\n                            className=\"bg-gray-800 hover:bg-gray:900 w-full mt-5 p-2 text-white uppercase font-bold rounded-md\"\n                        >\n                            Definir Tiempo\n                        </button>\n\n                    </div>\n                )}\n\n                {orden.tiempoentrega > 0 && (\n                    <p className=\"text-gray-700 \">Tiempo de Entrega:\n                        <span className=\"font-bold\"> {orden.tiempoentrega} minutos</span>\n                    </p>\n                )}\n\n                {!orden.completado && orden.tiempoentrega > 0 && (\n                    <button\n                        type=\"button\"\n                        className='bg-blue-800 hover:bg-blue-700 w-full mt-5 p-2 text-white font-bold'\n                        onClick={() => completarOrden(orden.id)}\n                    >\n                        Marcar como lista\n                    </button>\n                )}\n\n            </div>\n        </div>\n    )\n}\n\nexport default Orden","export function capitalizarPrimeraLetra(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nexport function capitalizarCadenaLarga(value) {\n    return value.trim().toLowerCase().replace(/\\w\\S*/g, (w) => (w.replace(/^\\w/, (c) => c.toUpperCase())));\n}\n\nexport function milliFormat(num) {\n    // Agregar miles\n    let s;\n    s = num.toString();\n    // if (/[^0-9\\.]/.test(s)) return \"invalid value\";\n    s = s.replace(/^(\\d*)$/, \"$1.\");\n    s = (s + \"00\").replace(/(\\d*\\.\\d\\d)\\d*/, \"$1\");\n    s = s.replace(\".\", \",\");\n    var re = /(\\d)(\\d{3},)/;\n    while (re.test(s)) {\n        s = s.replace(re, \"$1,$2\");\n    }\n    s = s.replace(/,(\\d\\d)$/, \".$1\");\n    return s.replace(/^\\./, \"0.\");\n}\n\nexport const formatUSD = (value) => {\n    \"worklet\";\n    if (value === \"\") {\n        const formattedValue = `$${value.toLocaleString(\n            // const formattedValue = `$${latestCurrentPrice.value.toLocaleString(\n            \"en-US\",\n            { currency: \"USD\" }\n        )}`;\n        return formattedValue;\n    }\n\n    const formattedValue = `${parseFloat(value)\n        .toFixed(2)\n        .replace(/\\d(?=(\\d{3})+\\.)/g, \"$&,\")}`;\n    return formattedValue;\n};\n\nexport function ISODateToFormated(value) {\n    let date = new Date(value);\n    let year = date.getFullYear();\n    let month = date.getMonth() + 1;\n    let dt = date.getDate();\n\n    if (dt < 10) {\n        dt = \"0\" + dt;\n    }\n    if (month < 10) {\n        month = \"0\" + month;\n    }\n\n    return dt + \"-\" + month + \"-\" + year;\n}\n\n\n","import React, {\n  useState, useEffect, useContext\n} from \"react\";\nimport { FirebaseContext } from '../../firebase'\nimport Orden from '../ui/Orden'\n\nconst Ordenes = () => {\n\n  // context con las operaciones de firebase\n  const { firebase } = useContext(FirebaseContext)\n\n  // state con las ordenes\n  const [ordenes, guardarOrdenes] = useState([])\n\n  useEffect(() => {\n    const obtenerOrdenes = () =>\n      firebase\n        .db\n        .collection('ordenes').where('completado', \"==\", false).onSnapshot(manejarSnapshot);\n\n    obtenerOrdenes();\n  }, [])\n\n  function manejarSnapshot(snapshot) {\n    const ordenes = snapshot.docs.map(doc => {\n      return {\n        id: doc.id,\n        ...doc.data()\n      }\n    });\n\n    guardarOrdenes(ordenes)\n  }\n\n  return (\n    <>\n      <h1 className=\"text-3xl font-light mb-4\">Ordenes</h1>\n\n      <div className=\"sm:flex sm:flex-wrap -mx-3\">\n        {ordenes.map(orden => (\n          <Orden\n            key={orden.id}\n            orden={orden}\n          />\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default Ordenes;\n","import React from 'react'\n\nconst ordenesPasadas = () => {\n    return (\n        <div>ordenesPasadas</div>\n    )\n}\n\nexport default ordenesPasadas","import React, { useContext, useRef } from \"react\";\nimport { FirebaseContext } from \"../../firebase\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Platillo = ({ platillo }) => {\n  // Hook para redireccionar\n  const navigate = useNavigate();\n\n  //Existencia ref para acceder al valor directamente\n  const exitenciaRef = useRef(platillo.existencia);\n\n  //context de firebase para cambios en  BD\n  const { firebase } = useContext(FirebaseContext);\n\n  const { id, nombre, imagen, existencia, categoria, precio, descripcion } =\n    platillo;\n\n  //modificar estado de platillo en firebase\n  const actualizarDisponibilidad = () => {\n    const existencia = exitenciaRef.current.value === \"true\";\n\n    try {\n      firebase.db.collection(\"productos\").doc(id).update({\n        existencia,\n      });\n    } catch (error) {\n      console.log(\"actualizarDisponibilidad:\", error);\n    }\n  };\n  return (\n    <div className=\"w-full px-3 mb-4\">\n      <div className=\"p-5 shadow-md bg-white\">\n        <div className=\"lg:flex\">\n          <div className=\"lg:w-5/12 xl:w-3/12\">\n            <img src={imagen} alt=\"imagen platillo\"></img>\n\n            <div className=\"sm:flex sm:-mx-2 p-l2\">\n              <label className=\"block mt-5 sm:w-2/4\">\n                <span className=\"block text-gray-800 mb-2 \">Existencia</span>\n\n                <select\n                  value={existencia}\n                  className=\"bg-white shadow appearance-none border rounded w-full py-2 px-3 leading-tight focus: outline-none focus:shadow-outline\"\n                  ref={exitenciaRef}\n                  onChange={() => actualizarDisponibilidad()}\n                >\n                  <option value=\"true\">Disponible</option>\n                  <option value=\"false\">No Disponible</option>\n                </select>\n\n                <div className=\"pt-2\">\n                  <button\n                    class=\"bg-green-500 hover:bg-green-700 text-white  shadow appearance-none border rounded w-full py-2 px-3 leading-tight focus: outline-none focus:shadow-outline\"\n                    onClick={() => {\n                      navigate(\"/actualizar-platillo\", { state: platillo });\n                    }}\n                  >\n                    Actualizar\n                  </button>\n                </div>\n              </label>\n            </div>\n          </div>\n          <div className=\"lg:w-7/12 xl:w-9/12 pl-5\">\n            <p className=\"font-bold text-2xl text-yellow-600 mb-4\">{nombre} </p>\n\n            <p className=\"text-gray-600 mb-4\">\n              Categor√≠a:{\" \"}\n              <span className=\"text-gray-700 font-bold\">\n                {categoria.toUpperCase()}\n              </span>\n            </p>\n            <p className=\"text-gray-600 mb-4\">{descripcion}</p>\n            <p className=\"text-gray-600 mb-4\">\n              Precio:{\" \"}\n              <span className=\"text-gray-700 font-bold\">S/ .{precio}</span>\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Platillo;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FirebaseContext } from \"../../firebase\";\n\nimport Platillo from \"../ui/Platillo\";\n\nconst Menu = () => {\n  //definir  el state de los platillo\n  const [platillos, guardarPlatillos] = useState([]);\n\n  const { firebase } = useContext(FirebaseContext);\n\n  //consultar la bd al cargar..\n  useEffect(() => {\n    const obtenerPlatillos = () => {\n      firebase.db.collection(\"productos\").onSnapshot(handleSnapshot);\n    };\n    obtenerPlatillos();\n  }, []);\n\n  //Snapshot nos permite utilizar la base de datos en tiempo real de firestore\n  function handleSnapshot(snapshot) {\n    const platillos = snapshot.docs.map((doc) => {\n      return {\n        id: doc.id,\n        ...doc.data(),\n      };\n    });\n    guardarPlatillos(platillos);\n  }\n\n  return (\n    <>\n      <h1 className=\"text-3xl font-light mb-4\">Menu</h1>\n      <Link\n        to=\"/nuevo-platillo\"\n        className=\" bg-blue-700 hover:bg-blue-800 ml-3, inline-block mb-5 p-2 text-white uppercase font-bold rounded-md\"\n      >\n        Agregar Platillo\n      </Link>\n\n      {platillos.map((platillo) => (\n        <Platillo key={platillo.id} platillo={platillo} />\n      ))}\n    </>\n  );\n};\n\nexport default Menu;\n","import React, { useContext, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { FirebaseContext } from \"../../firebase\";\nimport { useNavigate } from \"react-router-dom\";\nimport FileUploader from \"react-firebase-file-uploader\";\n\nconst NuevoPlatillo = () => {\n  //State para img\n  const [subiendo, guardarSubiendo] = useState(false);\n  const [progreso, guardarProgreso] = useState(0);\n  const [urlimagen, guardarUrlimagen] = useState(\"\");\n  // Context con las operaciones de firebase\n  const { firebase } = useContext(FirebaseContext);\n\n  // Hook para redireccionar\n  const navigate = useNavigate();\n\n  //validacion y leer los datos del formulario\n  const formik = useFormik({\n    initialValues: {\n      nombre: \"\",\n      precio: \"\",\n      categoria: \"\",\n      imagen: \"\",\n      descripcion: \"\",\n    },\n    validationSchema: Yup.object({\n      nombre: Yup.string()\n        .min(3, \"Los Platillos deben tener al menos 3 caracteres\")\n        .required(\"El Nombre del platillo es obligatorio\"),\n      precio: Yup.number()\n        .min(1, \"Debes agregar un n√∫mero\")\n        .required(\"El Precio es obligatorio\"),\n      categoria: Yup.string().required(\"La categor√≠a es obligatoria\"),\n      descripcion: Yup.string()\n        .min(3, \"La descripci√≥n debe ser m√°s larga\")\n        .required(\"La descripci√≥n es obligatoria\"),\n    }),\n    onSubmit: (platillo) => {\n      try {\n        platillo.existencia = true;\n        platillo.imagen = urlimagen;\n        firebase.db.collection(\"productos\").add(platillo);\n\n        //Redireccionar\n        navigate(\"/menu\");\n      } catch (error) {\n        console.log(\"error \");\n      }\n    },\n  });\n\n  //Todo sobre las imagenes de la\n  const handleUploadStart = () => {\n    guardarProgreso(0);\n    guardarSubiendo(true);\n  };\n\n  const handleUploadError = (error) => {\n    guardarSubiendo(false);\n    console.log(\"handleUploadError\", error);\n  };\n\n  const handleUploadSuccess = async (nombre) => {\n    guardarSubiendo(false);\n\n    guardarProgreso(100);\n\n    //Almacenar url destino para\n    const url = await firebase.storage\n      .ref(\"productos\")\n      .child(nombre)\n      .getDownloadURL();\n\n    console.log(\"handleUploadSuccess:\", url);\n    guardarUrlimagen(url);\n  };\n\n  const handleProgress = (progreso) => {\n    guardarProgreso(progreso);\n    console.log(\"handleProgress:\", progreso);\n  };\n\n  return (\n    <>\n      <h1 className=\"text-3xl font-light mb-4\">Agregar Platillo</h1>\n      <div className=\"flex justify-center mt-10\">\n        <div className=\"w-full max-w-3xl \">\n          <form onSubmit={formik.handleSubmit}>\n            <div className=\"mb-4\">\n              <label\n                className=\"block text-gray-700 text-sm font-bold mb-2\"\n                htmlFor=\"nombre\"\n              >\n                Nombre\n              </label>\n              <input\n                id=\"nombre\"\n                type=\"text\"\n                placeholder=\"Nombre Platillo\"\n                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                value={formik.values.nombre}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n              />\n            </div>\n            {formik.touched.nombre && formik.errors.nombre ? (\n              <div\n                className=\"bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-5\"\n                role=\"alert\"\n              >\n                <p className=\"font-bold\">Hubo un error:</p>\n                <p>{formik.errors.nombre}</p>\n              </div>\n            ) : null}\n\n            <div className=\"mb-4\">\n              <label\n                className=\"block text-gray-700 text-sm font-bold mb-2\"\n                htmlFor=\"precio\"\n              >\n                Precio\n              </label>\n              <input\n                id=\"precio\"\n                type=\"number\"\n                placeholder=\"S/. 20 \"\n                min=\"0 \"\n                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                value={formik.values.precio}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n              />\n            </div>\n            {formik.touched.precio && formik.errors.precio ? (\n              <div\n                className=\"bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-5\"\n                role=\"alert\"\n              >\n                <p className=\"font-bold\">Hubo un error:</p>\n                <p>{formik.errors.precio}</p>\n              </div>\n            ) : null}\n\n            <div className=\"mb-4\">\n              <label\n                className=\"block text-gray-700 text-sm font-bold mb-2\"\n                htmlFor=\"categoria\"\n              >\n                Categor√≠a\n              </label>\n              <select\n                className=\"block text-gray-700 text-sm font-bold mb-2 bg-white shadow appearance-none border rounded w-full py-2 px-3 leading-tight focus: outline-none focus:shadow-outline\"\n                id=\"precio\"\n                name=\"categoria\"\n                value={formik.values.categoria}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n              >\n                <option value=\"\">-- Seleccione --</option>\n                <option value=\"desayuno\">Desayuno</option>\n                <option value=\"comida\">Comida</option>\n                <option value=\"cena\">Cena</option>\n                <option value=\"bebidas\">Bebida</option>\n                <option value=\"postre\">Postre</option>\n                <option value=\"ensalada\">Ensalada</option>\n              </select>\n            </div>\n            {formik.touched.categoria && formik.errors.categoria ? (\n              <div\n                className=\"bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-5\"\n                role=\"alert\"\n              >\n                <p className=\"font-bold\">Hubo un error:</p>\n                <p>{formik.errors.categoria}</p>\n              </div>\n            ) : null}\n\n            <div className=\"mb-4\">\n              <label\n                className=\"block text-gray-700 text-sm font-bold mb-2\"\n                htmlFor=\"imagen\"\n              >\n                Imagen\n              </label>\n              <FileUploader\n                accept=\"image/*\"\n                id=\"imagen\"\n                name=\"imagen\"\n                randomizeFilename\n                storageRef={firebase.storage.ref(\"productos\")}\n                onUploadStart={handleUploadStart}\n                onUploadError={handleUploadError}\n                onUploadSuccess={handleUploadSuccess}\n                onProgress={handleProgress}\n              />\n            </div>\n\n            {subiendo && (\n              <div className=\"h-12 relative w-full border\">\n                <div\n                  className=\"bg-green-500 absolute left-0 top-0 text-white px-2 text-sm h-12 flex items-center \"\n                  style={{ width: `${progreso}%` }}\n                >\n                  {progreso} %\n                </div>\n              </div>\n            )}\n\n            {urlimagen && (\n              <p className=\"bg-green-500 text-white p-3 text-center my-5\">\n                La imagen se subio correctamente\n              </p>\n            )}\n\n            <div className=\"mb-4\">\n              <label\n                className=\"block text-gray-700 text-sm font-bold mb-2\"\n                htmlFor=\"descripcion\"\n              >\n                Descripcion\n              </label>\n              <textarea\n                id=\"descripcion\"\n                type=\"text\"\n                placeholder=\"Descripci√≥n del platillo\"\n                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline h-40\"\n                value={formik.values.descripcion}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n              ></textarea>\n            </div>\n            {formik.touched.descripcion && formik.errors.descripcion ? (\n              <div\n                className=\"bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-5\"\n                role=\"alert\"\n              >\n                <p className=\"font-bold\">Hubo un error:</p>\n                <p>{formik.errors.descripcion}</p>\n              </div>\n            ) : null}\n\n            <input\n              type=\"submit\"\n              value={\"Agregar\"}\n              className=\"bg-blue-700 hover:bg-blue-800\t w-full mt-5 p-2 text-white uppercase font-bold rounded-md\"\n            />\n          </form>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default NuevoPlatillo;\n","import React, { useContext, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { FirebaseContext } from \"../../firebase\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\n\nimport FileUploader from \"react-firebase-file-uploader\";\n\nconst ActualizarPlatillo = () => {\n  const { state } = useLocation();\n  const { id, nombre, imagen, categoria, precio, descripcion, existencia } =\n    state;\n  // console.log(\"state \", state);\n\n  //State para img\n  const [subiendo, guardarSubiendo] = useState(false);\n  const [progreso, guardarProgreso] = useState(0);\n  const [urlimagen, guardarUrlimagen] = useState(\"\");\n  // Context con las operaciones de firebase\n  const { firebase } = useContext(FirebaseContext);\n\n  // Hook para redireccionar\n  const navigate = useNavigate();\n\n  //validacion y leer los datos del formulario\n  const formik = useFormik({\n    initialValues: {\n      nombre: nombre,\n      precio: precio,\n      categoria: categoria,\n      imagen: imagen,\n      descripcion: descripcion,\n    },\n    validationSchema: Yup.object({\n      nombre: Yup.string()\n        .min(3, \"Los Platillos deben tener al menos 3 caracteres\")\n        .required(\"El Nombre del platillo es obligatorio\"),\n      precio: Yup.number()\n        .min(1, \"Debes agregar un n√∫mero\")\n        .required(\"El Precio es obligatorio\"),\n      categoria: Yup.string().required(\"La categor√≠a es obligatoria\"),\n      descripcion: Yup.string()\n        .min(3, \"La descripci√≥n debe ser m√°s larga\")\n        .required(\"La descripci√≥n es obligatoria\"),\n    }),\n    onSubmit: (platillo) => {\n      try {\n        platillo.existencia = existencia;\n        platillo.imagen = imagen;\n        // firebase.db.collection(\"productos\").add(platillo);\n        console.log(\"platillo \", platillo);\n\n        firebase.db.collection(\"productos\").doc(id).update({\n          nombre: platillo.nombre,\n          precio: platillo.precio,\n          categoria: platillo.categoria,\n          imagen: platillo.imagen,\n          descripci√≥n: platillo.descripcion,\n        });\n        //Redireccionar\n        navigate(\"/menu\");\n      } catch (error) {\n        console.log(\"error \");\n      }\n    },\n  });\n\n  //Todo sobre las imagenes de la\n  const handleUploadStart = () => {\n    guardarProgreso(0);\n    guardarSubiendo(true);\n  };\n\n  const handleUploadError = (error) => {\n    guardarSubiendo(false);\n    console.log(\"handleUploadError\", error);\n  };\n\n  const handleUploadSuccess = async (nombre) => {\n    guardarSubiendo(false);\n\n    guardarProgreso(100);\n\n    //Almacenar url destino para\n    const url = await firebase.storage\n      .ref(\"productos\")\n      .child(nombre)\n      .getDownloadURL();\n\n    console.log(\"handleUploadSuccess:\", url);\n    guardarUrlimagen(url);\n  };\n\n  const handleProgress = (progreso) => {\n    guardarProgreso(progreso);\n    console.log(\"handleProgress:\", progreso);\n  };\n\n  return (\n    <>\n      <h1 className=\"text-3xl font-light mb-4\">Actualizar Platillo</h1>\n      <div className=\"flex justify-center mt-10\">\n        <div className=\"w-full max-w-3xl \">\n          <form onSubmit={formik.handleSubmit}>\n            <div className=\"mb-4\">\n              <label\n                className=\"block text-gray-700 text-sm font-bold mb-2\"\n                htmlFor=\"nombre\"\n              >\n                Nombre\n              </label>\n              <input\n                id=\"nombre\"\n                type=\"text\"\n                placeholder=\"Nombre Platillo\"\n                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                value={formik.values.nombre}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n              />\n            </div>\n            {formik.touched.nombre && formik.errors.nombre ? (\n              <div\n                className=\"bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-5\"\n                role=\"alert\"\n              >\n                <p className=\"font-bold\">Hubo un error:</p>\n                <p>{formik.errors.nombre}</p>\n              </div>\n            ) : null}\n\n            <div className=\"mb-4\">\n              <label\n                className=\"block text-gray-700 text-sm font-bold mb-2\"\n                htmlFor=\"precio\"\n              >\n                Precio\n              </label>\n              <input\n                id=\"precio\"\n                type=\"number\"\n                placeholder=\"S/. 20 \"\n                min=\"0 \"\n                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                value={formik.values.precio}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n              />\n            </div>\n            {formik.touched.precio && formik.errors.precio ? (\n              <div\n                className=\"bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-5\"\n                role=\"alert\"\n              >\n                <p className=\"font-bold\">Hubo un error:</p>\n                <p>{formik.errors.precio}</p>\n              </div>\n            ) : null}\n\n            <div className=\"mb-4\">\n              <label\n                className=\"block text-gray-700 text-sm font-bold mb-2\"\n                htmlFor=\"categoria\"\n              >\n                Categor√≠a\n              </label>\n              <select\n                className=\"block text-gray-700 text-sm font-bold mb-2 bg-white shadow appearance-none border rounded w-full py-2 px-3 leading-tight focus: outline-none focus:shadow-outline\"\n                id=\"precio\"\n                name=\"categoria\"\n                value={formik.values.categoria}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n              >\n                <option value=\"\">-- Seleccione --</option>\n                <option value=\"desayuno\">Desayuno</option>\n                <option value=\"comida\">Comida</option>\n                <option value=\"cena\">Cena</option>\n                <option value=\"bebidas\">Bebida</option>\n                <option value=\"postre\">Postre</option>\n                <option value=\"ensalada\">Ensalada</option>\n              </select>\n            </div>\n            {formik.touched.categoria && formik.errors.categoria ? (\n              <div\n                className=\"bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-5\"\n                role=\"alert\"\n              >\n                <p className=\"font-bold\">Hubo un error:</p>\n                <p>{formik.errors.categoria}</p>\n              </div>\n            ) : null}\n\n            <div className=\"mb-4\">\n              <label\n                className=\"block text-gray-700 text-sm font-bold mb-2\"\n                htmlFor=\"imagen\"\n              >\n                Imagen\n              </label>\n\n              <div\n                className=\"shadow appearance-none border rounded mb-3\"\n                style={{\n                  width: 200,\n                  height: 200,\n                  // border: \"1px solid red\",\n                  padding: 10,\n                }}\n              >\n                <img\n                  src={imagen}\n                  alt=\"W3Schools.com\"\n                  // className=\"w-15 h-15\"\n                  style={{\n                    width: \"100%\",\n                    height: \"100%\",\n                    objectFit: \"contain\",\n                  }}\n                ></img>\n              </div>\n\n              <FileUploader\n                accept=\"image/*\"\n                id=\"imagen\"\n                name=\"imagen\"\n                randomizeFilename\n                storageRef={firebase.storage.ref(\"productos\")}\n                onUploadStart={handleUploadStart}\n                onUploadError={handleUploadError}\n                onUploadSuccess={handleUploadSuccess}\n                onProgress={handleProgress}\n              />\n            </div>\n\n            {subiendo && (\n              <div className=\"h-12 relative w-full border\">\n                <div\n                  className=\"bg-green-500 absolute left-0 top-0 text-white px-2 text-sm h-12 flex items-center \"\n                  style={{ width: `${progreso}%` }}\n                >\n                  {progreso} %\n                </div>\n              </div>\n            )}\n\n            {urlimagen && (\n              <p className=\"bg-green-500 text-white p-3 text-center my-5\">\n                La imagen se subio correctamente\n              </p>\n            )}\n\n            <div className=\"mb-4\">\n              <label\n                className=\"block text-gray-700 text-sm font-bold mb-2\"\n                htmlFor=\"descripcion\"\n              >\n                Descripcion\n              </label>\n              <textarea\n                id=\"descripcion\"\n                type=\"text\"\n                placeholder=\"Descripci√≥n del platillo\"\n                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline h-40\"\n                value={formik.values.descripcion}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n              ></textarea>\n            </div>\n            {formik.touched.descripcion && formik.errors.descripcion ? (\n              <div\n                className=\"bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-5\"\n                role=\"alert\"\n              >\n                <p className=\"font-bold\">Hubo un error:</p>\n                <p>{formik.errors.descripcion}</p>\n              </div>\n            ) : null}\n\n            <input\n              type=\"submit\"\n              value=\"Actualizar\"\n              className=\"bg-green-500 hover:bg-green-700 w-full mt-5 p-2 text-white uppercase font-bold rounded-md\"\n            />\n          </form>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ActualizarPlatillo;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Sidebar = () => {\n  return (\n    <div className=\"md:w-2/5 xl:w-1/5 bg-gray-800\">\n      <div className=\"p-6\">\n        <p className=\"uppercase text-white text-2xl tracking-wide text-center font-bold\">\n          Restaurant App\n        </p>\n\n        <p className=\"pt-3 pb-3 mt-3 text-gray-600\">\n          Administra tu restaurant en las siguientes opciones:\n        </p>\n\n        <nav>\n          <NavLink\n            className=\"p-1 text-gray-400 block hover:bg-yellow-500 hover:text-gray-900 rounded-md\"\n            activeClassName=\"text-yellow-500\"\n            exact=\"true\"\n            to=\"/\"\n          >\n            Ordenes\n          </NavLink>\n          <NavLink\n            className=\"p-1 text-gray-400 block hover:bg-yellow-500 hover:text-gray-900 rounded-md\"\n            activeClassName=\"text-yellow-500\"\n            exact=\"true\"\n            to=\"/ordenes-pasadas\"\n          >\n            Ordenes pasadas\n          </NavLink>\n          <NavLink\n            className=\"p-1 text-gray-400 block hover:bg-yellow-500 hover:text-gray-900 rounded-md\"\n            activeClassName=\"text-yellow-500\"\n            exact=\"true\"\n            to=\"/menu\"\n          >\n            Men√∫\n          </NavLink>\n        </nav>\n      </div>\n    </div>\n  );\n};\n\nexport default Sidebar;\n","import React from \"react\";\nimport { Routes, Route } from \"react-router\";\n\nimport firebase, { FirebaseContext } from \"./firebase\";\n\nimport Ordenes from \"./components/paginas/Ordenes\";\nimport OrdenesPasadas from \"./components/paginas/OrdenesPasadas\";\nimport Menu from \"./components/paginas/Menu\";\nimport NuevoPlatillo from \"./components/paginas/NuevoPlatillo\";\nimport ActualizarPlatillo from \"./components/paginas/ActualizarPlatillo\";\n\nimport Sidebar from \"./components/ui/Sidebar\";\n\nfunction App() {\n  return (\n    <FirebaseContext.Provider value={{ firebase }}>\n      <div className=\"md:flex min-h-screen\">\n        <Sidebar />\n\n        <div className=\"md:w-2/5 xl:w-4/5 p-6\">\n          <Routes>\n            <Route path=\"/\" element={<Ordenes />} />\n            <Route path=\"/menu\" element={<Menu />} />\n            <Route path=\"/ordenes-pasadas\" element={<OrdenesPasadas />} />\n            <Route path=\"/nuevo-platillo\" element={<NuevoPlatillo />} />\n            <Route\n              path=\"/actualizar-platillo\"\n              element={<ActualizarPlatillo />}\n            />\n          </Routes>\n        </div>\n      </div>\n    </FirebaseContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/main.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router¬†} from 'react-router-dom';\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}